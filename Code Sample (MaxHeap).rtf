{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green116\blue0;\red170\green13\blue145;\red28\green0\blue207;
}
\margl1440\margr1440\vieww14180\viewh15160\viewkind0
\deftab543
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 	/**\
     * Swaps two elements in array\
     * @param i1 index of first element to swap\
     * @param i2 index of second element to swap\
     */\cf0 \
    \cf3 private\cf0  \cf3 void\cf0  swap(\cf3 int\cf0  i1, \cf3 int\cf0  i2) \{\
        T obj = backingArray[i1];\
        backingArray[i1] = backingArray[i2];\
        backingArray[i2] = obj;\
    \}\cf2 \
\
	/**\
     * Heapifys element down the heap\
     * @param i index of item to heapify\
     */\cf0 \
    \cf3 private\cf0  \cf3 void\cf0  downHeap(\cf3 int\cf0  i) \{\
        \cf3 if\cf0  (i * \cf4 2\cf0  <= size) \{\
            \cf3 if\cf0  (i * \cf4 2\cf0  + \cf4 1\cf0  > size) \{\
                \cf3 if\cf0  (backingArray[i * \cf4 2\cf0 ].compareTo(backingArray[i]) > \cf4 0\cf0 )\
                    swap(i, i * \cf4 2\cf0 );\
            \} \cf3 else\cf0  \{\
                \cf3 boolean\cf0  childALarger = backingArray[i].compareTo(backingArray[\cf4 2\cf0  * i]) < \cf4 0\cf0 ;\
                \cf3 boolean\cf0  childBLarger = backingArray[i].compareTo(backingArray[\cf4 2\cf0  * i + \cf4 1\cf0 ]) < \cf4 0\cf0 ;\
                \cf3 if\cf0  (childALarger && childBLarger) \{\
                    \cf3 if\cf0  (backingArray[i * \cf4 2\cf0 ].compareTo(backingArray[i * \cf4 2\cf0  + \cf4 1\cf0 ]) > \cf4 0\cf0 ) \{\
                        swap(i, i * \cf4 2\cf0 );\
                        downHeap(i * \cf4 2\cf0 );\
                    \} \cf3 else\cf0  \{\
                        swap(i, i * \cf4 2\cf0  + \cf4 1\cf0 );\
                        downHeap(i * \cf4 2\cf0  + \cf4 1\cf0 );\
                    \}\
                \} \cf3 else\cf0  \cf3 if\cf0  (childALarger) \{\
                    swap(i, \cf4 2\cf0  * i);\
                    downHeap(i * \cf4 2\cf0 );\
                \} \cf3 else\cf0  \cf3 if\cf0  (childBLarger) \{\
                    swap(i, \cf4 2\cf0  * i + \cf4 1\cf0 );\
                    downHeap(i * \cf4 2\cf0  + \cf4 1\cf0 );\
                \}\
            \}\
        \}\
    \}}